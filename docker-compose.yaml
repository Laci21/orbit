version: '3.8'

services:
  # AGNTCY Infrastructure Services - SLIM removed (using direct A2A communication)
  # slim:
  #   image: ghcr.io/agntcy/slim:0.3.15
  #   container_name: slim
  #   ports:
  #     - "46357:46357"
  #   environment:
  #     - PASSWORD=${SLIM_GATEWAY_PASSWORD:-dummy_password}
  #     - CONFIG_PATH=/config.yaml
  #   volumes:
  #     - ./config/docker/slim/server-config.yaml:/config.yaml
  #   command: ["/slim", "--config", "/config.yaml"]
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:46357/health"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  # Orbit Agent Services
  ear-to-ground:
    build:
      context: .
      dockerfile: docker/Dockerfile.ear-to-ground
    platform: linux/amd64
    ports:
      - "9001:9001"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - ORBIT_TWEET_FILE=/app/data/tweets_astronomer.json
      - AGENT_PORT=9001
      - SENTIMENT_ANALYST_URL=http://sentiment-analyst:9002
      - FACT_CHECKER_URL=http://fact-checker:9004
      - RISK_SCORE_URL=http://risk-score:9003
    volumes:
      - ./data:/app/data:ro
      - ./:/app:cached
    restart: unless-stopped
    command: >
      sh -c "watchfiles --filter python 'python -m agents.ear_to_ground.server' /app"

  sentiment-analyst:
    build:
      context: .
      dockerfile: docker/Dockerfile.sentiment-analyst
    platform: linux/amd64
    ports:
      - "9002:9002"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AGENT_PORT=9002
    volumes:
      - ./:/app:cached
    restart: unless-stopped
    command: >
      sh -c "watchfiles --filter python 'python -m agents.sentiment_analyst.server' /app"

  risk-score:
    build:
      context: .
      dockerfile: docker/Dockerfile.risk-score
    platform: linux/amd64
    ports:
      - "9003:9003"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - CRISIS_THRESHOLD=${CRISIS_THRESHOLD:-7.0}
      - AGENT_PORT=9003
      - PRESS_SECRETARY_URL=http://press-secretary:9006
    volumes:
      - ./:/app:cached
    restart: unless-stopped
    command: >
      sh -c "watchfiles --filter python 'python -m agents.risk_score.server' /app"

  fact-checker:
    build:
      context: .
      dockerfile: docker/Dockerfile.fact-checker
    platform: linux/amd64
    ports:
      - "9004:9004"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AGENT_PORT=9004
      - LEGAL_COUNSEL_URL=http://legal-counsel:9005
      - RISK_SCORE_URL=http://risk-score:9003
    volumes:
      - ./data:/app/data:ro
      - ./:/app:cached
    restart: unless-stopped
    command: >
      sh -c "watchfiles --filter python 'python -m agents.fact_checker.server' /app"

  legal-counsel:
    build:
      context: .
      dockerfile: docker/Dockerfile.legal-counsel
    platform: linux/amd64
    ports:
      - "9005:9005"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AGENT_PORT=9005
      - PRESS_SECRETARY_URL=http://press-secretary:9006
      - LEGAL_RUBRIC_PATH=data/legal_rubric.md
    volumes:
      - ./data:/app/data:ro
      - ./:/app:cached
    restart: unless-stopped
    command: >
      sh -c "watchfiles --filter python 'python -m agents.legal_counsel.server' /app"

  press-secretary:
    build:
      context: .
      dockerfile: docker/Dockerfile.press-secretary
    platform: linux/amd64
    ports:
      - "9006:9006"
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AGENT_PORT=9006
    volumes:
      - ./:/app:cached
    restart: unless-stopped
    command: >
      sh -c "watchfiles --filter python 'python -m agents.press_secretary.server' /app"


  # Gateway Service (FastAPI + React UI)
  gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.gateway
    platform: linux/amd64
    ports:
      - "8000:8000"  # FastAPI + React UI  
      - "5173:5173"  # Vite dev server
    environment:
      - GATEWAY_PORT=8000
      - EAR_TO_GROUND_URL=http://ear-to-ground:9001
    volumes:
      - ./gateway:/app/gateway:cached  # Enable hot reload for gateway code
    depends_on:
      - ear-to-ground
      - sentiment-analyst
      - risk-score
      - fact-checker
      - legal-counsel
      - press-secretary
    restart: unless-stopped

networks:
  default:
    name: orbit-network